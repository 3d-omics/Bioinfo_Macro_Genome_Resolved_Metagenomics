# Run tests over snakefile workflow
---
name: Tests

on:  # yamllint disable-line rule:truthy
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

env:
  CACHE_NUMBER: 0  # Increment this number to invalidate the cache

jobs:

  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: 'true'
      - name: Run pre-commit on all files
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

  Testing:
    runs-on: ubuntu-latest
    needs:
      - Pre-Commit
    steps:

      - uses: actions/checkout@v4
        with:
          lfs: 'true'

      # - name: Set up caches
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       .snakemake/conda
      #       ~/.cache/pre-commit/
      #     key: snakemake-conda

      # - name: Download All Environments
      #   uses: snakemake/snakemake-github-action@v1
      #   with:
      #     directory: .
      #     snakefile: workflow/Snakefile
      #     args: >
      #       preprocess prokaryotes report
      #       --use-conda
      #       --conda-frontend mamba
      #       --show-failed-logs
      #       --cores 3
      #       --conda-cleanup-pkgs cache
      #       --conda-create-envs-only

      # - name: Clean conda cache
      #   run: conda clean --all --yes

      - name: Test workflow - Preprocess
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --show-failed-logs
            --cores 3
            --latency-wait 5
            preprocess__bowtie2
            preprocess__fastp
            preprocess__kraken2
            preprocess__samtools
            report__step__preprocess

      - name: Clean after preprocess
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --conda-cleanup-envs
            --conda-cleanup-pkgs cache
            --cores 1

      - name: Test workflow - Assemble (until megahit)
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --show-failed-logs
            --cores 3
            --latency-wait 5
            assemble__megahit

      - name: Clean after assemble
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --conda-cleanup-envs
            --conda-cleanup-pkgs cache
            --cores 1
            --verbose

      - name: Test workflow - Assemble (replace mock assembly for something more meaty)
        run: |
          sudo mkdir --parents results/assemble/megahit
          sudo cp resources/mock_assembly.fa.gz results/assemble/megahit/all.fa.gz

      - name: Test workflow - Assemble (from megahit to magscot)
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --rerun-triggers mtime
            --show-failed-logs
            --cores 3
            --latency-wait 5
            prokaryotes__cluster__metabat2
            prokaryotes__cluster__maxbin2


      - name: Clean after magscot
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --conda-cleanup-envs
            --conda-cleanup-pkgs cache
            --cores 1
            --verbose

      - name: Test workflow - Assemble (skip drep)
        run: |
          sudo mkdir --parents results/prokaryotes/cluster/drep/dereplicated_genomes
          sudo touch results/prokaryotes/cluster/drep/dereplicated_genomes/.snakemake_timestamp
          sudo cp resources/mock_assembly.fa.gz results/prokaryotes/cluster/drep/dereplicated_genomes/all:bin_00001.fa.gz
          sudo cp resources/mock_assembly.fa.gz results/prokaryotes/cluster/drep/dereplicated_genomes.fa.gz

      - name: Test workflow - Quantify (skip drep)
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --rerun-triggers mtime
            --show-failed-logs
            --cores 3
            --latency-wait 5
            prokaryotes__quantify
            report__step__prokaryotes


      - name: Clean after quantify
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --conda-cleanup-envs
            --conda-cleanup-pkgs cache
            --cores 1
            --verbose

      - name: Test workflow - Annotate (only quast)
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --rerun-triggers mtime
            --show-failed-logs
            --cores 3
            --latency-wait 5
            prokaryotes__annotate__quast

      - name: Clean after annotate
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --conda-cleanup-envs
            --conda-cleanup-pkgs cache
            --cores 1
            --verbose

      - name: Test workflow - Report
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --profile profile/default
            --rerun-triggers mtime
            --show-failed-logs
            --cores 3
            --latency-wait 5
            report

      - name: Clean after report
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            --use-conda
            --conda-cleanup-envs
            --conda-cleanup-pkgs cache
            --cores 1
            --verbose

      - name: Delete everything
        run: |
          sudo find results -not -name "*.log" -type f -delete -print

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: results
          path: |
            results/**/*.log
            # results/
            # reports/
            # !**/*.cram
            # !**/*.fq.gz
            # !**/*.bam
            # !**/*.bt2
