# Run tests over snakefile workflow
---
name: Tests

on:  # yamllint disable-line rule:truthy
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

env:
  CACHE_NUMBER: 0  # Increment this number to invalidate the cache

jobs:

  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'
      - name: Run pre-commit on all files
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files

  Testing:
    runs-on: ubuntu-latest
    needs:
      - Pre-Commit
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Set up caches
        uses: actions/cache@v3
        with:
          path: |
            .snakemake/conda
            ~/.cache/pre-commit/
          key: snakemake-conda

      # - name: Prepare micromamba
      #   uses: mamba-org/setup-micromamba@v1
      #   with:
      #     init-shell: bash
      #     environment-name: mock
      #     create-args: >-
      #       seqtk
      #       pigz
      #       samtools
      #     cache-environment: true
      #     post-cleanup: 'all'
      #     condarc: |
      #       channels:
      #       - conda-forge
      #       - bioconda
      #       - defaults
      #       channel_priority: strict
      #   env:
      #     ACTIONS_STEP_DEBUG: true

      # - name: Create mock reads
      #   shell: bash -leo pipefail {0}
      #   run: bash workflow/scripts/generate_mock_data.sh

      - name: Clean conda cache
        run: conda clean --all --yes

      - name: Preprocessing
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            pre
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache
            --latency-wait 5

      - name: Preprocessing - Clean snakemake
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            pre
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache

      - name: Preprocessing - Clean conda
        run: conda clean --packages --tarbals --yes

      - name: Assemble
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            assemble
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache
            --latency-wait 5

      - name: Assemble - Clean snakemake
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            assemble
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache

      - name: Assemble - Clean conda
        run: conda clean --packages --tarbals --yes

      - name: Give to the binning steps an assembly that will work
        run: >
          sudo bash -c "gzip -dc resources/mock_assembly.fa.gz > results/assemble/renaming/all.fa"

      - name: Bin
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            bin
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache
            --latency-wait 5
            --rerun-triggers mtime

      - name: Bin - Clean snakemake
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            bin
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache

      - name: Bin - Clean conda
        run: conda clean --packages --tarbals --yes

      - name: Put the mock assembly as a dereplicated genome
        run: |
          sudo mkdir --parents results/dereplicate/drep/dereplicated_genomes
          sudo bash -c "gzip -dc resources/mock_assembly.fa.gz > results/dereplicate/drep/dereplicated_genomes/all:bin_00001.fa"
          sudo touch results/dereplicate/drep/dereplicated_genomes/.snakemake_timestamp

      - name: Test workflow - Dereplicate
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            dereplicate
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache
            --latency-wait 5
            --rerun-triggers mtime

      - name: Dereplicate - Clean snakemake
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            dereplicate
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache

      - name: Dereplicate - Clean conda
        run: conda clean --packages --tarbals --yes

      - name: Test workflow - Report
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            report
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache
            --latency-wait 5
            --rerun-triggers mtime

      - name: Report - Clean snakemake
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .
          snakefile: workflow/Snakefile
          args: >
            report
            --use-conda
            --conda-frontend mamba
            --show-failed-logs
            --cores 3
            --conda-cleanup-pkgs cache

      - name: Report - Clean conda
        run: conda clean --packages --tarbals --yes

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: results
          path: |
            results/**/*.log
            # results/
            # reports/
            # !**/*.cram
            # !**/*.fq.gz
            # !**/*.bam
            # !**/*.bt2
