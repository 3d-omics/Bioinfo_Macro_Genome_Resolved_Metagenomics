# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

import pandas as pd
import yaml

# Import configuration files
params = yaml.load(open("config/params.yml", "r"), Loader=yaml.SafeLoader)
features = yaml.load(open("config/features.yml", "r"), Loader=yaml.SafeLoader)
samples = pd.read_table("config/samples.tsv", comment="#", dtype="str")

# Generate useful variables
samples = (
    samples.assign(assembly_id=samples.assembly_ids.str.replace(" ", "").str.split(","))
    .explode("assembly_id")
    .sort_values(by=["assembly_id", "sample_id", "library_id"])
)
samples = samples.assign(assembly_id=samples.assembly_id.str.strip())

SAMPLES = samples.sample_id.unique()
SAMPLE_LIBRARY = samples[["sample_id", "library_id"]].values.tolist()
ASSEMBLY_SAMPLE_LIBRARY = samples[
    ["assembly_id", "sample_id", "library_id"]
].values.tolist()
ASSEMBLIES = samples.assembly_id.unique()
KRAKEN2_DBS = features["kraken2_dbs"]
HOST_NAMES = [] if features["hosts"] is None else list(features["hosts"].keys())
LAST_HOST = HOST_NAMES[-1] if len(HOST_NAMES) > 0 else None


# Import subworkflows
include: "rules/folders.smk"
include: "rules/helpers/_main.smk"
include: "rules/reads/_main.smk"
include: "rules/reference/_main.smk"
include: "rules/pre/_main.smk"
include: "rules/assemble/_main.smk"
include: "rules/virify/virify.smk"
include: "rules/bin/_main.smk"
include: "rules/dereplicate/_main.smk"
include: "rules/report/_main.smk"


rule all:
    """Run the entire pipeline"""
    input:
        rules.reads.input,
        rules.pre.input,
        rules.assemble.input,
        rules.bin.input,
        rules.report.input,
